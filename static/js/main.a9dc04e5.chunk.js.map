{"version":3,"sources":["atoms.tsx","components/CreateToDo.tsx","components/ToDo.tsx","components/ToDoList.tsx","App.tsx","index.tsx","theme.ts"],"names":["localStorageEffect","key","setSelf","onSet","savedToDos","localStorage","getItem","JSON","parse","newToDos","_","isReset","removeItem","setItem","stringify","toDoState","atom","default","effects_UNSTABLE","categoryState","selectInputState","toDoSelector","selector","get","toDos","select","filter","toDo","category","Form","styled","form","Text","input","Category","Btn","button","CreateToDo","setToDos","useSetRecoilState","setCategory","setSelect","useForm","register","handleSubmit","setValue","onSubmit","oldToDos","text","id","Date","now","oldCategory","includes","placeholder","required","CardContainer","li","Card","div","props","theme","textColor","bgColor","Delete","ToDo","name","onClick","event","currentTarget","targetIndex","findIndex","slice","categorys","console","log","Container","Title","Select","ToDoList","useRecoilValue","useRecoilState","value","onInput","map","GlobalStyle","createGlobalStyle","App","ReactDOM","render","StrictMode","accentColor","cardBgColor","document","getElementById"],"mappings":"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","file":"static/js/main.a9dc04e5.chunk.js","sourcesContent":["import { atom, selector } from \"recoil\";\r\n\r\nexport const localStorageEffect =\r\n  (key: string) =>\r\n  ({ setSelf, onSet }: any) => {\r\n    const savedToDos = localStorage.getItem(key);\r\n    if (savedToDos != null) {\r\n      setSelf(JSON.parse(savedToDos));\r\n    }\r\n    onSet((newToDos: any, _: any, isReset: boolean) => {\r\n      isReset\r\n        ? localStorage.removeItem(key)\r\n        : localStorage.setItem(key, JSON.stringify(newToDos));\r\n    });\r\n  };\r\n\r\nexport interface IToDo {\r\n  text: string;\r\n  id: number;\r\n  category: string;\r\n}\r\n\r\nexport interface ICategory {\r\n  category: string;\r\n}\r\n\r\nexport const toDoState = atom<IToDo[]>({\r\n  key: \"toDo\",\r\n  default: [],\r\n  effects_UNSTABLE: [localStorageEffect(\"toDo\")],\r\n});\r\n\r\nexport const categoryState = atom<ICategory[]>({\r\n  key: \"category\",\r\n  default: [],\r\n  effects_UNSTABLE: [localStorageEffect(\"category\")],\r\n});\r\n\r\nexport const selectInputState = atom<ICategory>({\r\n  key: \"selectInput\",\r\n  default: \"\" as any,\r\n  effects_UNSTABLE: [localStorageEffect(\"selectInput\")],\r\n});\r\n\r\nexport const toDoSelector = selector({\r\n  key: \"toDoSelector\",\r\n  get: ({ get }) => {\r\n    const toDos = get(toDoState);\r\n    const select = get(selectInputState);\r\n    return toDos.filter((toDo: any) => toDo.category === select);\r\n  },\r\n});\r\n","import styled from \"styled-components\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { useSetRecoilState } from \"recoil\";\r\nimport { categoryState, selectInputState, toDoState } from \"../atoms\";\r\n\r\nconst Form = styled.form`\r\n  margin-top: 2rem;\r\n  display: flex;\r\n  width: 62%;\r\n`;\r\n\r\nconst Text = styled.input`\r\n  height: 4rem;\r\n  width: 70%;\r\n  border: 1px solid black;\r\n  border-radius: 10px;\r\n  font-size: 1.4rem;\r\n  padding: 0 1.2rem;\r\n  :focus {\r\n    outline: none;\r\n    border-color: #9147ff;\r\n  }\r\n`;\r\n\r\nconst Category = styled.input`\r\n  margin-left: 0.5rem;\r\n  height: 4rem;\r\n  width: 30%;\r\n  border: 1px solid black;\r\n  border-radius: 10px;\r\n  font-size: 1rem;\r\n  padding: 0 0.6rem;\r\n  :focus {\r\n    outline: none;\r\n    border-color: #9147ff;\r\n  }\r\n`;\r\n\r\nconst Btn = styled.button`\r\n  margin-left: 0.5rem;\r\n  padding: 0.8em 3em;\r\n  height: 4rem;\r\n  background-color: #9147ff;\r\n  border-radius: 1rem;\r\n  font-size: 1rem;\r\n  :active {\r\n    transform: translateY(5px);\r\n  }\r\n`;\r\n\r\ninterface IForm {\r\n  category: string;\r\n  toDo: string;\r\n}\r\n\r\nfunction CreateToDo() {\r\n  const setToDos = useSetRecoilState(toDoState);\r\n  const setCategory = useSetRecoilState(categoryState);\r\n  const setSelect = useSetRecoilState(selectInputState);\r\n  const { register, handleSubmit, setValue } = useForm<IForm>();\r\n  const handleValid = ({ category, toDo }: IForm) => {\r\n    setToDos((oldToDos) => [\r\n      { text: toDo, id: Date.now(), category },\r\n      ...oldToDos,\r\n    ]);\r\n    setCategory((oldCategory: any) =>\r\n      oldCategory?.includes(category)\r\n        ? [...oldCategory]\r\n        : [category, ...oldCategory]\r\n    );\r\n    setSelect(category as any);\r\n    setValue(\"category\", \"\");\r\n    setValue(\"toDo\", \"\");\r\n  };\r\n  return (\r\n    <Form onSubmit={handleSubmit(handleValid)}>\r\n      <Category {...register(\"category\")} placeholder=\"Write a category\" />\r\n      <Text\r\n        {...register(\"toDo\", {\r\n          required: \"Please write a To Do\",\r\n        })}\r\n        placeholder=\"Write a to do\"\r\n      />\r\n      <Btn>Add</Btn>\r\n    </Form>\r\n  );\r\n}\r\n\r\nexport default CreateToDo;\r\n","import { useRecoilValue, useSetRecoilState } from \"recoil\";\r\nimport { categoryState, IToDo, toDoState } from \"../atoms\";\r\nimport styled from \"styled-components\";\r\n\r\nconst CardContainer = styled.li`\r\n  list-style-type: none;\r\n  margin-top: 1rem;\r\n  width: 60%;\r\n`;\r\n\r\nconst Card = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  background-color: ${(props) => props.theme.textColor};\r\n  height: 50px;\r\n  border-radius: 10px;\r\n  width: 100%;\r\n`;\r\nconst Text = styled.div`\r\n  color: ${(props) => props.theme.bgColor};\r\n  font-size: 2rem;\r\n`;\r\n\r\nconst Category = styled.div`\r\n  background-color: #9147ff;\r\n  border-radius: 10px;\r\n  color: ${(props) => props.theme.textColor};\r\n  margin-right: 1rem;\r\n  min-width: 3rem;\r\n  text-align: center;\r\n`;\r\n\r\nconst Delete = styled.button`\r\n  color: ${(props) => props.theme.bgColor};\r\n`;\r\n\r\nfunction ToDo({ text, category, id }: IToDo) {\r\n  const setToDos = useSetRecoilState(toDoState);\r\n  const setCategory = useSetRecoilState(categoryState);\r\n  const onClick = (event: React.MouseEvent<HTMLButtonElement>) => {\r\n    const {\r\n      currentTarget: { name },\r\n    } = event;\r\n    setToDos((oldToDos) => {\r\n      const targetIndex = oldToDos.findIndex((toDo) => toDo.id === id);\r\n      return [\r\n        ...oldToDos.slice(0, targetIndex),\r\n        ...oldToDos.slice(targetIndex + 1),\r\n      ];\r\n    });\r\n    setCategory((oldCategory) => {\r\n      const targetIndex = oldCategory.findIndex(\r\n        (categorys) => categorys.category === category\r\n      );\r\n      console.log(targetIndex);\r\n      return [\r\n        ...oldCategory.slice(0, targetIndex),\r\n        ...oldCategory.slice(targetIndex + 1),\r\n      ];\r\n    });\r\n  };\r\n  // const aa = oldCategory.filter((old) => old.category !== category);\r\n  // console.log(aa);\r\n\r\n  return (\r\n    <CardContainer>\r\n      <Card>\r\n        <Text>{text}</Text>\r\n        <Category>{category}</Category>\r\n        <Delete name={text} onClick={onClick}>\r\n          x\r\n        </Delete>\r\n      </Card>\r\n\r\n      {/* {category !== Categories.DOING && (\r\n        <button name={Categories.DOING} onClick={onClick}>\r\n          Doing\r\n        </button>\r\n      )}\r\n      {category !== Categories.TO_DO && (\r\n        <button name={Categories.TO_DO} onClick={onClick}>\r\n          To Do\r\n        </button>\r\n      )}\r\n      {category !== Categories.DONE && (\r\n        <button name={Categories.DONE} onClick={onClick}>\r\n          Done\r\n        </button>\r\n      )} */}\r\n    </CardContainer>\r\n  );\r\n}\r\n\r\nexport default ToDo;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { useRecoilState, useRecoilValue } from \"recoil\";\r\nimport { categoryState, toDoSelector, selectInputState } from \"../atoms\";\r\nimport CreateToDo from \"./CreateToDo\";\r\nimport ToDo from \"./ToDo\";\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nconst Title = styled.div`\r\n  font-size: 5rem;\r\n  margin-top: 5rem;\r\n`;\r\n\r\nconst Select = styled.select`\r\n  margin-top: 2rem;\r\n  width: 60%;\r\n  height: 4rem;\r\n  font-size: 2rem;\r\n  :focus {\r\n    outline: none;\r\n    border-color: #9147ff;\r\n  }\r\n`;\r\n\r\nfunction ToDoList() {\r\n  const newToDos = useRecoilValue(toDoSelector);\r\n  const category = useRecoilValue(categoryState);\r\n  const [select, setSelect] = useRecoilState(selectInputState);\r\n  const onInput = (event: React.FormEvent<HTMLSelectElement>) => {\r\n    setSelect(event.currentTarget.value as any);\r\n  };\r\n  return (\r\n    <Container>\r\n      <Title>To Dos</Title>\r\n      <Select value={select as any} onInput={onInput}>\r\n        {category.map((oldCategory: any) => (\r\n          <option value={oldCategory}>{oldCategory}</option>\r\n        ))}\r\n      </Select>\r\n      <CreateToDo />\r\n      {newToDos?.map((toDo) => (\r\n        <ToDo key={toDo.id} {...toDo} />\r\n      ))}\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default ToDoList;\r\n","import { createGlobalStyle } from \"styled-components\";\r\nimport ToDoList from \"./components/ToDoList\";\r\n\r\nconst GlobalStyle = createGlobalStyle`\r\n@import url('https://fonts.googleapis.com/css2?family=Source+Sans+Pro:wght@300;400&display=swap');\r\nhtml, body, div, span, applet, object, iframe,\r\nh1, h2, h3, h4, h5, h6, p, blockquote, pre,\r\na, abbr, acronym, address, big, cite, code,\r\ndel, dfn, em, img, ins, kbd, q, s, samp,\r\nsmall, strike, strong, sub, sup, tt, var,\r\nb, u, i, center,\r\ndl, dt, dd, menu, ol, ul, li,\r\nfieldset, form, label, legend,\r\ntable, caption, tbody, tfoot, thead, tr, th, td,\r\narticle, aside, canvas, details, embed,\r\nfigure, figcaption, footer, header, hgroup,\r\nmain, menu, nav, output, ruby, section, summary,\r\ntime, mark, audio, video {\r\n  margin: 0;\r\n  padding: 0;\r\n  border: 0;\r\n  font-size: 100%;\r\n  font: inherit;\r\n  vertical-align: baseline;\r\n}\r\n/* HTML5 display-role reset for older browsers */\r\narticle, aside, details, figcaption, figure,\r\nfooter, header, hgroup, main, menu, nav, section {\r\n  display: block;\r\n}\r\n/* HTML5 hidden-attribute fix for newer browsers */\r\n*[hidden] {\r\n    display: none;\r\n}\r\nbody {\r\n  line-height: 1;\r\n}\r\nmenu, ol, ul {\r\n  list-style: none;\r\n}\r\nblockquote, q {\r\n  quotes: none;\r\n}\r\nblockquote:before, blockquote:after,\r\nq:before, q:after {\r\n  content: '';\r\n  content: none;\r\n}\r\ntable {\r\n  border-collapse: collapse;\r\n  border-spacing: 0;\r\n}\r\n* {\r\n  box-sizing: border-box;\r\n}\r\nbody {\r\n  font-weight: 300;\r\n  font-family: 'Source Sans Pro', sans-serif;\r\n  background-color:${(props) => props.theme.bgColor};\r\n  color:${(props) => props.theme.textColor};\r\n  line-height: 1.2;\r\n}\r\na {\r\n  text-decoration:none;\r\n  color:inherit;\r\n}\r\n`;\r\n\r\nfunction App() {\r\n  return (\r\n    <>\r\n      <GlobalStyle />\r\n      <ToDoList />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { RecoilRoot } from \"recoil\";\r\nimport { ThemeProvider } from \"styled-components\";\r\nimport App from \"./App\";\r\nimport { darkTheme } from \"./theme\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <RecoilRoot>\r\n      <ThemeProvider theme={darkTheme}>\r\n        <App />\r\n      </ThemeProvider>\r\n    </RecoilRoot>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);","import { DefaultTheme } from \"styled-components\";\r\n\r\nexport const darkTheme: DefaultTheme = {\r\n  bgColor: \"#2f3640\",\r\n  textColor: \"white\",\r\n  accentColor: \"#9c88ff\",\r\n  cardBgColor: \"transparent\",\r\n};\r\n"],"sourceRoot":""}
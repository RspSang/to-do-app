{"version":3,"sources":["atoms.tsx","components/CreateToDo.tsx","components/ToDo.tsx","components/ToDoList.tsx","App.tsx","index.tsx","theme.ts"],"names":["localStorageEffect","key","setSelf","onSet","savedToDos","localStorage","getItem","JSON","parse","newToDos","_","isReset","removeItem","setItem","stringify","toDoState","atom","default","effects_UNSTABLE","categoryState","selectInputState","toDoSelector","selector","get","toDos","select","filter","toDo","category","Form","styled","form","Text","input","Category","Btn","button","CreateToDo","setToDos","useSetRecoilState","setCategory","setSelect","useForm","register","handleSubmit","setValue","onSubmit","oldToDos","text","id","Date","now","oldCategory","includes","placeholder","required","CardContainer","li","Card","div","props","theme","textColor","bgColor","ToDo","useRecoilValue","Container","Title","Select","ToDoList","useRecoilState","value","onInput","event","currentTarget","map","GlobalStyle","createGlobalStyle","App","ReactDOM","render","StrictMode","accentColor","cardBgColor","document","getElementById"],"mappings":"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","file":"static/js/main.d6c78caf.chunk.js","sourcesContent":["import { atom, selector } from \"recoil\";\n\nexport const localStorageEffect =\n  (key: string) =>\n  ({ setSelf, onSet }: any) => {\n    const savedToDos = localStorage.getItem(key);\n    if (savedToDos != null) {\n      setSelf(JSON.parse(savedToDos));\n    }\n    onSet((newToDos: any, _: any, isReset: boolean) => {\n      isReset\n        ? localStorage.removeItem(key)\n        : localStorage.setItem(key, JSON.stringify(newToDos));\n    });\n  };\n\nexport interface IToDo {\n  text: string;\n  id: number;\n  category: string;\n}\n\nexport interface ICategory {\n  category: string;\n}\n\nexport const toDoState = atom<IToDo[]>({\n  key: \"toDo\",\n  default: [],\n  effects_UNSTABLE: [localStorageEffect(\"toDo\")],\n});\n\nexport const categoryState = atom<ICategory[]>({\n  key: \"category\",\n  default: [],\n  effects_UNSTABLE: [localStorageEffect(\"category\")],\n});\n\nexport const selectInputState = atom<ICategory>({\n  key: \"selectInput\",\n  default: \"\" as any,\n  effects_UNSTABLE: [localStorageEffect(\"selectInput\")],\n});\n\nexport const toDoSelector = selector({\n  key: \"toDoSelector\",\n  get: ({ get }) => {\n    const toDos = get(toDoState);\n    const select = get(selectInputState);\n    return toDos.filter((toDo: any) => toDo.category === select);\n  },\n});\n","import styled from \"styled-components\";\nimport { useForm } from \"react-hook-form\";\nimport { useSetRecoilState } from \"recoil\";\nimport { categoryState, selectInputState, toDoState } from \"../atoms\";\n\nconst Form = styled.form`\n  margin-top: 2rem;\n  display: flex;\n  width: 62%;\n`;\n\nconst Text = styled.input`\n  height: 4rem;\n  width: 70%;\n  border: 1px solid black;\n  border-radius: 10px;\n  font-size: 1.4rem;\n  padding: 0 1.2rem;\n  :focus {\n    outline: none;\n    border-color: #9147ff;\n  }\n`;\n\nconst Category = styled.input`\n  margin-left: 0.5rem;\n  height: 4rem;\n  width: 30%;\n  border: 1px solid black;\n  border-radius: 10px;\n  font-size: 1rem;\n  padding: 0 0.6rem;\n  :focus {\n    outline: none;\n    border-color: #9147ff;\n  }\n`;\n\nconst Btn = styled.button`\n  margin-left: 0.5rem;\n  padding: 0.8em 3em;\n  height: 4rem;\n  background-color: #9147ff;\n  border-radius: 1rem;\n  font-size: 1rem;\n  :active {\n    transform: translateY(5px);\n  }\n`;\n\ninterface IForm {\n  category: string;\n  toDo: string;\n}\n\nfunction CreateToDo() {\n  const setToDos = useSetRecoilState(toDoState);\n  const setCategory = useSetRecoilState(categoryState);\n  const setSelect = useSetRecoilState(selectInputState);\n  const { register, handleSubmit, setValue } = useForm<IForm>();\n  const handleValid = ({ category, toDo }: IForm) => {\n    setToDos((oldToDos) => [\n      { text: toDo, id: Date.now(), category },\n      ...oldToDos,\n    ]);\n    setCategory((oldCategory: any) =>\n      oldCategory?.includes(category)\n        ? [...oldCategory]\n        : [category, ...oldCategory]\n    );\n    setSelect(category as any);\n    setValue(\"category\", \"\");\n    setValue(\"toDo\", \"\");\n  };\n  return (\n    <Form onSubmit={handleSubmit(handleValid)}>\n      <Category {...register(\"category\")} placeholder=\"Write a category\" />\n      <Text\n        {...register(\"toDo\", {\n          required: \"Please write a To Do\",\n        })}\n        placeholder=\"Write a to do\"\n      />\n      <Btn>Add</Btn>\n    </Form>\n  );\n}\n\nexport default CreateToDo;\n","import { useRecoilValue, useSetRecoilState } from \"recoil\";\nimport { categoryState, IToDo, toDoState } from \"../atoms\";\nimport styled from \"styled-components\";\n\nconst CardContainer = styled.li`\n  list-style-type: none;\n  margin-top: 1rem;\n  width: 60%;\n`;\n\nconst Card = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  background-color: ${(props) => props.theme.textColor};\n  height: 50px;\n  border-radius: 10px;\n  width: 100%;\n`;\nconst Text = styled.div`\n  color: ${(props) => props.theme.bgColor};\n  font-size: 2rem;\n`;\n\nconst Category = styled.div`\n  background-color: #9147ff;\n  border-radius: 10px;\n  color: ${(props) => props.theme.textColor};\n  margin-right: 1rem;\n  min-width: 3rem;\n  text-align: center;\n`;\n\nfunction ToDo({ text, category, id }: IToDo) {\n  const setToDos = useSetRecoilState(toDoState);\n  const oldCategory = useRecoilValue(categoryState);\n  const onClick = (event: React.MouseEvent<HTMLButtonElement>) => {\n    const {\n      currentTarget: { name },\n    } = event;\n    setToDos((oldToDos) => {\n      const targetIndex = oldToDos.findIndex((toDo) => toDo.id === id);\n      const newToDo = { text, id, category: name as any };\n      return [\n        ...oldToDos.slice(0, targetIndex),\n        newToDo,\n        ...oldToDos.slice(targetIndex + 1),\n      ];\n    });\n  };\n  // const aa = oldCategory.filter((old) => old.category !== category);\n  // console.log(aa);\n\n  return (\n    <CardContainer>\n      <Card>\n        <Text>{text}</Text>\n        <Category>{category}</Category>\n      </Card>\n\n      {/* {category !== Categories.DOING && (\n        <button name={Categories.DOING} onClick={onClick}>\n          Doing\n        </button>\n      )}\n      {category !== Categories.TO_DO && (\n        <button name={Categories.TO_DO} onClick={onClick}>\n          To Do\n        </button>\n      )}\n      {category !== Categories.DONE && (\n        <button name={Categories.DONE} onClick={onClick}>\n          Done\n        </button>\n      )} */}\n    </CardContainer>\n  );\n}\n\nexport default ToDo;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { useRecoilState, useRecoilValue } from \"recoil\";\nimport { categoryState, toDoSelector, selectInputState } from \"../atoms\";\nimport CreateToDo from \"./CreateToDo\";\nimport ToDo from \"./ToDo\";\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Title = styled.div`\n  font-size: 5rem;\n  margin-top: 5rem;\n`;\n\nconst Select = styled.select`\n  margin-top: 2rem;\n  width: 60%;\n  height: 4rem;\n  font-size: 2rem;\n  :focus {\n    outline: none;\n    border-color: #9147ff;\n  }\n`;\n\nfunction ToDoList() {\n  const newToDos = useRecoilValue(toDoSelector);\n  const category = useRecoilValue(categoryState);\n  const [select, setSelect] = useRecoilState(selectInputState);\n  const onInput = (event: React.FormEvent<HTMLSelectElement>) => {\n    setSelect(event.currentTarget.value as any);\n  };\n  return (\n    <Container>\n      <Title>To Dos</Title>\n      <Select value={select as any} onInput={onInput}>\n        {category.map((oldCategory: any) => (\n          <option value={oldCategory}>{oldCategory}</option>\n        ))}\n      </Select>\n      <CreateToDo />\n      {newToDos?.map((toDo) => (\n        <ToDo key={toDo.id} {...toDo} />\n      ))}\n    </Container>\n  );\n}\n\nexport default ToDoList;\n","import { createGlobalStyle } from \"styled-components\";\nimport ToDoList from \"./components/ToDoList\";\n\nconst GlobalStyle = createGlobalStyle`\n@import url('https://fonts.googleapis.com/css2?family=Source+Sans+Pro:wght@300;400&display=swap');\nhtml, body, div, span, applet, object, iframe,\nh1, h2, h3, h4, h5, h6, p, blockquote, pre,\na, abbr, acronym, address, big, cite, code,\ndel, dfn, em, img, ins, kbd, q, s, samp,\nsmall, strike, strong, sub, sup, tt, var,\nb, u, i, center,\ndl, dt, dd, menu, ol, ul, li,\nfieldset, form, label, legend,\ntable, caption, tbody, tfoot, thead, tr, th, td,\narticle, aside, canvas, details, embed,\nfigure, figcaption, footer, header, hgroup,\nmain, menu, nav, output, ruby, section, summary,\ntime, mark, audio, video {\n  margin: 0;\n  padding: 0;\n  border: 0;\n  font-size: 100%;\n  font: inherit;\n  vertical-align: baseline;\n}\n/* HTML5 display-role reset for older browsers */\narticle, aside, details, figcaption, figure,\nfooter, header, hgroup, main, menu, nav, section {\n  display: block;\n}\n/* HTML5 hidden-attribute fix for newer browsers */\n*[hidden] {\n    display: none;\n}\nbody {\n  line-height: 1;\n}\nmenu, ol, ul {\n  list-style: none;\n}\nblockquote, q {\n  quotes: none;\n}\nblockquote:before, blockquote:after,\nq:before, q:after {\n  content: '';\n  content: none;\n}\ntable {\n  border-collapse: collapse;\n  border-spacing: 0;\n}\n* {\n  box-sizing: border-box;\n}\nbody {\n  font-weight: 300;\n  font-family: 'Source Sans Pro', sans-serif;\n  background-color:${(props) => props.theme.bgColor};\n  color:${(props) => props.theme.textColor};\n  line-height: 1.2;\n}\na {\n  text-decoration:none;\n  color:inherit;\n}\n`;\n\nfunction App() {\n  return (\n    <>\n      <GlobalStyle />\n      <ToDoList />\n    </>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { RecoilRoot } from \"recoil\";\nimport { ThemeProvider } from \"styled-components\";\nimport App from \"./App\";\nimport { darkTheme } from \"./theme\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <RecoilRoot>\n      <ThemeProvider theme={darkTheme}>\n        <App />\n      </ThemeProvider>\n    </RecoilRoot>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);","import { DefaultTheme } from \"styled-components\";\n\nexport const darkTheme: DefaultTheme = {\n  bgColor: \"#2f3640\",\n  textColor: \"white\",\n  accentColor: \"#9c88ff\",\n  cardBgColor: \"transparent\",\n};\n"],"sourceRoot":""}